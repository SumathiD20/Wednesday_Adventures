name: Snyk Security Scan and Docker Image for Staging

on:
  push:
    branches:
      - l00187927-WA-Jira18-CIPipeline
      - main
      - develop

jobs:
  build-test-security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'

    - name: Install Snyk CLI
      run: npm install -g snyk

    - name: Validate Snyk API Token
      run: |
        if [ -z "${{ secrets.SNYK_TOKEN }}" ]; then
          echo "ERROR: SNYK_TOKEN is not set or is empty!"
          exit 1
        fi

    - name: Run Snyk Security Scan
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk test --all-projects --severity-threshold=high || echo "Snyk scan completed with issues"

    - name: Monitor vulnerabilities in Snyk
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk monitor --all-projects || echo "Snyk monitor completed with issues"

    # Build Backend and Frontend Docker Images
    - name: Build Backend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:Staging \
          -f project-backend/Dockerfile \
          project-backend/

    - name: Build Frontend Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:Staging \
          -f frontend/Dockerfile \
          frontend/

    # Push Docker Images
    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Backend Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/backend:Staging

    - name: Push Frontend Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend:Staging

    # Verify Images on Docker Hub
    - name: Verify Images on Docker Hub
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/backend:Staging
        docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:Staging

    # Run Snyk container scan for both backend and frontend
    - name: Snyk Container Scan for Backend
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk container test ${{ secrets.DOCKER_USERNAME }}/backend:Staging --severity-threshold=high || echo "Snyk container scan completed with issues"

    - name: Snyk Container Scan for Frontend
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: snyk container test ${{ secrets.DOCKER_USERNAME }}/frontend:Staging --severity-threshold=high || echo "Snyk container scan completed with issues"
